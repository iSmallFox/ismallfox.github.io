<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Electron-Vue-Sqlite3电脑软件</title>
    <url>/4ed25b80.html</url>
    <content><![CDATA[<p>只会前端技术也可以开发电脑软件</p>
<p>利用Electron即可打包成电脑软件，也可以调用系统API 如打开文件窗口 写入文件等</p>
<p>环境要求：</p>
<p>node  yarn(npm也可以)  vue   electron</p>
<p>Sqlite3是数据库不用安装，如果你的项目用得到就安装</p>
<p>第一步搭建vue</p>
<p>一、全局安装vue/cli</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></table></figure>
<p>验证全局是否安装成功</p>
<p>vue -V</p>
<p>二、初始化项目</p>
<p>1、选择自定义</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vue create 项目名</span><br></pre></td></tr></table></figure>
<p>2、使用上下箭头选择，按空格确认选择</p>
<p>根据需求选择</p>
<p>安装electron</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add electron --dev</span><br><span class="line">yarn add electron-devtools-installer --dev</span><br><span class="line">yarn add vue-cli-plugin-electron-builder</span><br></pre></td></tr></table></figure>
<p>如果ts-loader报错</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn remove ts-loader</span><br><span class="line">yarn add ts-loader@~8.2.0 -D</span><br></pre></td></tr></table></figure>
<p>这只是笔记，详细请看<a href="https://zhuanlan.zhihu.com/p/518697714">https://zhuanlan.zhihu.com/p/518697714</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Electron</tag>
        <tag>Vue</tag>
        <tag>Sqlite3</tag>
        <tag>NodeJS</tag>
        <tag>软件开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Js数组的reduce常用操作方法</title>
    <url>/f88955ba.html</url>
    <content><![CDATA[<p>reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。</p>
<p>reduce() 可以作为一个高阶函数，用于函数的 compose。</p>
<h2 id="语法">语法</h2>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">array.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">total, currentValue, currentIndex, arr</span>), initialValue)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><em>total</em></td>
<td style="text-align:left">必需。<em>初始值</em>, 或者计算结束后的返回值。</td>
</tr>
<tr>
<td style="text-align:left"><em>currentValue</em></td>
<td style="text-align:left">必需。当前元素</td>
</tr>
<tr>
<td style="text-align:left"><em>currentIndex</em></td>
<td style="text-align:left">可选。当前元素的索引</td>
</tr>
<tr>
<td style="text-align:left"><em>arr</em></td>
<td style="text-align:left">可选。当前元素所属的数组对象。</td>
</tr>
</tbody>
</table>
<h2 id="找最大值">找最大值</h2>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 找最大值</span></span><br><span class="line"><span class="keyword">const</span> result = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">5</span>].<span class="title function_">reduce</span>(<span class="function">(<span class="params">x,y</span>) =&gt;</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(x,y));</span><br><span class="line"><span class="comment">// 打印结果</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// 6</span></span><br></pre></td></tr></table></figure>
<h2 id="数组去重">数组去重</h2>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 去重</span></span><br><span class="line"><span class="keyword">const</span> result = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">5</span>].<span class="title function_">reduce</span>(<span class="function">(<span class="params">x,y</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 检测是否存在 </span></span><br><span class="line">    <span class="keyword">if</span>(x.<span class="title function_">indexOf</span>(y) === -<span class="number">1</span>)&#123;</span><br><span class="line">        x.<span class="title function_">push</span>(y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;,[]);</span><br><span class="line"><span class="comment">// 打印结果</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// [ 1, 2, 3, 6, 5 ]</span></span><br></pre></td></tr></table></figure>
<h2 id="数组归类">数组归类</h2>
<p>首先准备一个数组，然后开始使用reduce方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数组</span></span><br><span class="line"><span class="keyword">const</span> dataList = [</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&#x27;武器&#x27;</span>,<span class="attr">value</span>:<span class="string">&#x27;木剑&#x27;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&#x27;防具&#x27;</span>,<span class="attr">value</span>:<span class="string">&#x27;锁子甲&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&#x27;武器&#x27;</span>,<span class="attr">value</span>:<span class="string">&#x27;铁剑&#x27;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&#x27;消耗品&#x27;</span>,<span class="attr">value</span>:<span class="string">&#x27;苹果&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&#x27;消耗品&#x27;</span>,<span class="attr">value</span>:<span class="string">&#x27;西瓜&#x27;</span>&#125;</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 归类</span></span><br><span class="line"><span class="keyword">const</span> resultObj = dataList.<span class="title function_">reduce</span>(<span class="function">(<span class="params">x,y</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; name &#125; = y;</span><br><span class="line">    <span class="keyword">if</span>(!x[name])&#123;</span><br><span class="line">        x[name] = [];</span><br><span class="line">    &#125;</span><br><span class="line">    x[name].<span class="title function_">push</span>(y.<span class="property">value</span>);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;,&#123;&#125;);</span><br><span class="line"><span class="comment">// 打印结果</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(resultObj); <span class="comment">// 拿到的结果&#123; &#x27;武器&#x27;: [ &#x27;木剑&#x27;, &#x27;铁剑&#x27; ], &#x27;防具&#x27;: [ &#x27;锁子甲&#x27; ], &#x27;消耗品&#x27;: [ &#x27;苹果&#x27;, &#x27;西瓜&#x27; ] &#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="字符串反转">字符串反转</h2>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 字符串</span></span><br><span class="line"><span class="keyword">const</span> str = <span class="string">&#x27;hello word&#x27;</span>;</span><br><span class="line"><span class="comment">// 先转成数组 然后反转</span></span><br><span class="line"><span class="keyword">const</span> resultStr = <span class="title class_">Array</span>.<span class="title function_">from</span>(str).<span class="title function_">reduce</span>(<span class="function">(<span class="params">x,y</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span><span class="subst">$&#123;x&#125;</span>`</span></span><br><span class="line">&#125;,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="comment">// 打印结果</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(resultStr); <span class="comment">// drow olleh</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>数组归类</tag>
        <tag>数组去重</tag>
        <tag>找最大值</tag>
        <tag>reduce</tag>
      </tags>
  </entry>
  <entry>
    <title>如何利用js替换html页面中的文本或者符号等</title>
    <url>/25.html</url>
    <content><![CDATA[<p>找到一个好玩的程序 发现不支持发送表情怎么办或者系统不支持表情</p>
<p>下面我提供一下我的表情支持思路 不需要后端</p>
<p>比如我们把一个表情定义为[emt]16[/emt]  16就代表表情图片名称 这样发布</p>
<p>然后渲染的时候我们就可以用replace替换掉16前后的字符</p>
<p>具体代码贴在下面了</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;biaoqing&quot;</span>&gt;[emt]<span class="number">16</span>[<span class="regexp">/emt]&lt;/</span>div&gt;</span><br><span class="line">&lt;!--上面是显示区域--&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 替换代码为表情</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">window</span>.<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;biaoqing&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> html = div.<span class="property">innerHTML</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    div.<span class="property">innerHTML</span> = html.<span class="title function_">replace</span>(<span class="regexp">/(\[emt])/g</span>,<span class="string">&quot;&lt;img src=&quot;</span>+<span class="string">&quot;/img/&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/(\[)/g</span>,<span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/(\/emt])/g</span>,<span class="string">&quot;.gif /&gt;&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>如果渲染数据用的是接口怎么办呢？可以在拿到数据的时候遍历修改</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> list = [</span><br><span class="line">	&#123;<span class="attr">content</span>:<span class="string">&quot;你好啊[emt]1[/emt]&quot;</span>&#125;,</span><br><span class="line">	&#123;<span class="attr">content</span>:<span class="string">&quot;你也好啊[emt]44[/emt]&quot;</span>&#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; list.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    list[i].<span class="property">content</span> = list[i].<span class="property">content</span>.<span class="title function_">replace</span>(<span class="regexp">/(\[emt])/g</span>,<span class="string">&quot;&lt;img src=&quot;</span>+<span class="string">&quot;/img/&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/(\[)/g</span>,<span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/(\/emt])/g</span>,<span class="string">&quot;.gif /&gt;&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>正则</tag>
        <tag>表情</tag>
        <tag>js表情</tag>
      </tags>
  </entry>
  <entry>
    <title>截取链接中的参数 很实用</title>
    <url>/153.html</url>
    <content><![CDATA[<p>一段可以获取链接中任意参数的js</p>
<p>在很多地方你可以用到它 比如webApp 移动端</p>
<p>比如你从首页到内容页必须附带一个参数 你可以这样/index.html?id=5</p>
<p>然后在内容页使用getParam(‘id’)这样就可以获取到5了</p>
<p>第一个参数传入键 第二个参数是可选的 如果不传入会从当前网址获取 如果传入了网址就从传入的网址中获取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getParam</span>(<span class="params">id,_url</span>)&#123;</span><br><span class="line">     <span class="keyword">var</span> url =_url||<span class="variable language_">window</span>.<span class="property">document</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">     <span class="keyword">var</span> url=url.<span class="title function_">toString</span>();</span><br><span class="line">     <span class="keyword">var</span> u = url.<span class="title function_">split</span>(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">     <span class="keyword">var</span> get = &#123;&#125;;</span><br><span class="line">     <span class="keyword">if</span> (<span class="title function_">typeof</span>(u[<span class="number">1</span>]) == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">       u = u[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> u) &#123;</span><br><span class="line">         <span class="keyword">var</span> j = u[i].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">         get[j[<span class="number">0</span>]] = j[<span class="number">1</span>];</span><br><span class="line">          </span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> get[id];</span><br><span class="line">      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>截取链接</tag>
        <tag>url提取参数</tag>
      </tags>
  </entry>
  <entry>
    <title>封装了一个JQ倒计时功能 使用很简单</title>
    <url>/21.html</url>
    <content><![CDATA[<p>代码适用于普通的html页面 别的地方要用可以调整代码</p>
<p>既然是JQ的代码 那么引入JQ那就是必须的了 如果不想用JQ 修改一下返回的方法就好了</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;timer1&quot;</span> style=<span class="string">&quot;color:red&quot;</span>&gt;&lt;/div&gt;  </span><br><span class="line">  </span><br><span class="line"> <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">djs</span>(<span class="string">&#x27;2017/11/20&#x27;</span>,<span class="string">&#x27;#timer1&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">djs</span>(<span class="params">sj,div</span>)&#123;  <span class="comment">//sj格式2017/11/20 传字符串进来</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> starttime = <span class="keyword">new</span> <span class="title class_">Date</span>(sj);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> nowtime = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> time = starttime - nowtime;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> day = <span class="built_in">parseInt</span>(time / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> hour = <span class="built_in">parseInt</span>(time / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> minute = <span class="built_in">parseInt</span>(time / <span class="number">1000</span> / <span class="number">60</span> % <span class="number">60</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> seconds = <span class="built_in">parseInt</span>(time / <span class="number">1000</span> % <span class="number">60</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        $(div).<span class="title function_">html</span>(day + <span class="string">&quot;天&quot;</span> + hour + <span class="string">&quot;小时&quot;</span> + minute + <span class="string">&quot;分钟&quot;</span> + seconds + <span class="string">&quot;秒&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;, <span class="number">1000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>使用方法是 djs() 括号里面传两个参数 ‘时间’,‘要显示的元素’</p>
<p>时间格式为2017/11/20</p>
<p>元素格式为 ‘.css’ 或者 ‘#id’ 或者 ‘div’</p>
<p>比如<div class="box"></div>  那就是’.box’  也可以’div’ 不推荐后者</p>
<p>比如<div id="box"></div>    那就是’#box’  也可以’div’ 不推荐后者</p>
<p>比如<div></div>    那就是’div’</p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>倒计时</tag>
        <tag>JQ插件</tag>
      </tags>
  </entry>
  <entry>
    <title>教你怎么用JQ写AJAX(详细版)</title>
    <url>/155.html</url>
    <content><![CDATA[<p>首先引入JQ才可以用 必须的</p>
<p>jQ的Ajax 设这样写的$.ajax({}); 括号里面是参数</p>
<p>例如下面</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;&#x27;</span>,        <span class="comment">//请求地址(问号前面就是地址 不需要问号)</span></span><br><span class="line">    <span class="attr">type</span>:<span class="string">&#x27;&#x27;</span>,    <span class="comment">//请求方式(可以是POST或者GET)</span></span><br><span class="line">    <span class="attr">data</span>:&#123;        <span class="comment">//请求参数(前面参数冒号后面值 如果是变量不需要引号如果是固定的参数请用引号引起来)</span></span><br><span class="line">        <span class="attr">id</span>:<span class="string">&#x27;58&#x27;</span>,    <span class="comment">//列子</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">callback</span>:<span class="string">&#x27;callback&#x27;</span>,    <span class="comment">//此条用于跨域请求(例如获取别人网站的数据或者远程调用自己的数据 如果是json则本条删掉不需要)</span></span><br><span class="line">    <span class="attr">dataType</span>:<span class="string">&#x27;json&#x27;</span>,        <span class="comment">//返回数据格式 (可以是文本可以是网页可以是json数据也可以是jsonp，默认返回json)</span></span><br><span class="line">    <span class="attr">beforeSend</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//数据开始请求  这里可以写个小特效 比如加载中... 那在请求到了结果可以改成加载完毕</span></span><br><span class="line">        $(<span class="string">&#x27;title&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;数据请求中&#x27;</span>);<span class="comment">//(例子可删)例如改变浏览器标题为数据请求中</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>)&#123;    <span class="comment">//请求数据结果</span></span><br><span class="line">        $(<span class="string">&#x27;title&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;数据请求结束&#x27;</span>);<span class="comment">//(例子可删)服务器给出结果了在这里改变下</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data)    <span class="comment">//打印一下请求到的数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>ajax</tag>
        <tag>JQAjax</tag>
      </tags>
  </entry>
  <entry>
    <title>移动端页面自适应解决方案rem布局</title>
    <url>/203.html</url>
    <content><![CDATA[<p>移动端自适应方案，这里推荐使用网易做法</p>
<p>用上这段代码 就可以根据750设计稿 测量尺寸来精准实现了</p>
<h2 id="网易做法">网易做法</h2>
<p>引入：页面开头处引入下面这段代码，用于动态计算font-size</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">doc, win</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> docEl = doc.<span class="property">documentElement</span>,</span><br><span class="line">        isIOS = navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>),</span><br><span class="line">        dpr = isIOS ? <span class="title class_">Math</span>.<span class="title function_">min</span>(win.<span class="property">devicePixelRatio</span>, <span class="number">3</span>) : <span class="number">1</span>,</span><br><span class="line">        dpr = <span class="variable language_">window</span>.<span class="property">top</span> === <span class="variable language_">window</span>.<span class="property">self</span> ? dpr : <span class="number">1</span>, <span class="comment">//被iframe引用时，禁止缩放</span></span><br><span class="line">        dpr = <span class="number">1</span>,</span><br><span class="line">        scale = <span class="number">1</span> / dpr,</span><br><span class="line">        resizeEvt = <span class="string">&#x27;orientationchange&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span> ? <span class="string">&#x27;orientationchange&#x27;</span> : <span class="string">&#x27;resize&#x27;</span>;</span><br><span class="line">    docEl.<span class="property">dataset</span>.<span class="property">dpr</span> = dpr;</span><br><span class="line">    <span class="keyword">var</span> metaEl = doc.<span class="title function_">createElement</span>(<span class="string">&#x27;meta&#x27;</span>);</span><br><span class="line">    metaEl.<span class="property">name</span> = <span class="string">&#x27;viewport&#x27;</span>;</span><br><span class="line">    metaEl.<span class="property">content</span> = <span class="string">&#x27;initial-scale=&#x27;</span> + scale + <span class="string">&#x27;,maximum-scale=&#x27;</span> + scale + <span class="string">&#x27;, minimum-scale=&#x27;</span> + scale;</span><br><span class="line">    docEl.<span class="property">firstElementChild</span>.<span class="title function_">appendChild</span>(metaEl);</span><br><span class="line">    <span class="keyword">var</span> recalc = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> width = docEl.<span class="property">clientWidth</span>;</span><br><span class="line">        <span class="keyword">if</span> (width / dpr &gt; <span class="number">750</span>) &#123;</span><br><span class="line">            width = <span class="number">750</span> * dpr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 乘以100，px : rem = 100 : 1</span></span><br><span class="line">        docEl.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="number">100</span> * (width / <span class="number">750</span>) + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">recalc</span>()</span><br><span class="line">    <span class="keyword">if</span> (!doc.<span class="property">addEventListener</span>) <span class="keyword">return</span>;</span><br><span class="line">    win.<span class="title function_">addEventListener</span>(resizeEvt, recalc, <span class="literal">false</span>);</span><br><span class="line">&#125;)(<span class="variable language_">document</span>, <span class="variable language_">window</span>);</span><br></pre></td></tr></table></figure>
<p>使用：<br>
未引入前：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">750px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">640px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>引入后：除以100并将px换成rem</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">7.5rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">6.4rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>换算的依据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 乘以100，px : rem = 100 : 1</span></span><br><span class="line"><span class="keyword">var</span> recalc = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> width = docEl.<span class="property">clientWidth</span>;</span><br><span class="line">    <span class="keyword">if</span> (width / dpr &gt; <span class="number">750</span>) &#123;</span><br><span class="line">        width = <span class="number">750</span> * dpr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 乘以100，px : rem = 100 : 1</span></span><br><span class="line">    docEl.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="number">100</span> * (width / <span class="number">750</span>) + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="淘宝做法">淘宝做法</h2>
<p>引入：页面开头处引入下面这段代码，用于动态计算font-size，或者单独放入一个文件，引入文件也可以</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">;</span><br><span class="line">(<span class="keyword">function</span>(<span class="params">win, lib</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> doc = win.<span class="property">document</span>;</span><br><span class="line">    <span class="keyword">var</span> docEl = doc.<span class="property">documentElement</span>;</span><br><span class="line">    <span class="keyword">var</span> metaEl = doc.<span class="title function_">querySelector</span>(<span class="string">&#x27;meta[name=&quot;viewport&quot;]&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> flexibleEl = doc.<span class="title function_">querySelector</span>(<span class="string">&#x27;meta[name=&quot;flexible&quot;]&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> dpr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> scale = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> tid;</span><br><span class="line">    <span class="keyword">var</span> flexible = lib.<span class="property">flexible</span> || (lib.<span class="property">flexible</span> = &#123;&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (metaEl) &#123;</span><br><span class="line">        <span class="keyword">var</span> match = metaEl.<span class="title function_">getAttribute</span>(<span class="string">&#x27;content&#x27;</span>).<span class="title function_">match</span>(<span class="regexp">/initial\-scale=([\d\.]+)/</span>);</span><br><span class="line">        <span class="keyword">if</span> (match) &#123;</span><br><span class="line">            scale = <span class="built_in">parseFloat</span>(match[<span class="number">1</span>]);</span><br><span class="line">            dpr = <span class="built_in">parseInt</span>(<span class="number">1</span> / scale);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flexibleEl) &#123;</span><br><span class="line">        <span class="keyword">var</span> content = flexibleEl.<span class="title function_">getAttribute</span>(<span class="string">&#x27;content&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (content) &#123;</span><br><span class="line">            <span class="keyword">var</span> initialDpr = content.<span class="title function_">match</span>(<span class="regexp">/initial\-dpr=([\d\.]+)/</span>);</span><br><span class="line">            <span class="keyword">var</span> maximumDpr = content.<span class="title function_">match</span>(<span class="regexp">/maximum\-dpr=([\d\.]+)/</span>);</span><br><span class="line">            <span class="keyword">if</span> (initialDpr) &#123;</span><br><span class="line">                dpr = <span class="built_in">parseFloat</span>(initialDpr[<span class="number">1</span>]);</span><br><span class="line">                scale = <span class="built_in">parseFloat</span>((<span class="number">1</span> / dpr).<span class="title function_">toFixed</span>(<span class="number">2</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (maximumDpr) &#123;</span><br><span class="line">                dpr = <span class="built_in">parseFloat</span>(maximumDpr[<span class="number">1</span>]);</span><br><span class="line">                scale = <span class="built_in">parseFloat</span>((<span class="number">1</span> / dpr).<span class="title function_">toFixed</span>(<span class="number">2</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!dpr &amp;&amp; !scale) &#123;</span><br><span class="line">        <span class="keyword">var</span> isAndroid = win.<span class="property">navigator</span>.<span class="property">appVersion</span>.<span class="title function_">match</span>(<span class="regexp">/android/gi</span>);</span><br><span class="line">        <span class="keyword">var</span> isIPhone = win.<span class="property">navigator</span>.<span class="property">appVersion</span>.<span class="title function_">match</span>(<span class="regexp">/iphone/gi</span>);</span><br><span class="line">        <span class="keyword">var</span> devicePixelRatio = win.<span class="property">devicePixelRatio</span>;</span><br><span class="line">        <span class="keyword">if</span> (isIPhone) &#123;</span><br><span class="line">            <span class="comment">// iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案</span></span><br><span class="line">            <span class="keyword">if</span> (devicePixelRatio &gt;= <span class="number">3</span> &amp;&amp; (!dpr || dpr &gt;= <span class="number">3</span>)) &#123;</span><br><span class="line">                dpr = <span class="number">3</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (devicePixelRatio &gt;= <span class="number">2</span> &amp;&amp; (!dpr || dpr &gt;= <span class="number">2</span>)) &#123;</span><br><span class="line">                dpr = <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dpr = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 其他设备下，仍旧使用1倍的方案</span></span><br><span class="line">            dpr = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        scale = <span class="number">1</span> / dpr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    docEl.<span class="title function_">setAttribute</span>(<span class="string">&#x27;data-dpr&#x27;</span>, dpr);</span><br><span class="line">    <span class="keyword">if</span> (!metaEl) &#123;</span><br><span class="line">        metaEl = doc.<span class="title function_">createElement</span>(<span class="string">&#x27;meta&#x27;</span>);</span><br><span class="line">        metaEl.<span class="title function_">setAttribute</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;viewport&#x27;</span>);</span><br><span class="line">        metaEl.<span class="title function_">setAttribute</span>(<span class="string">&#x27;content&#x27;</span>, <span class="string">&#x27;initial-scale=&#x27;</span> + scale + <span class="string">&#x27;, maximum-scale=&#x27;</span> + scale + <span class="string">&#x27;, minimum-scale=&#x27;</span> + scale + <span class="string">&#x27;, user-scalable=no&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (docEl.<span class="property">firstElementChild</span>) &#123;</span><br><span class="line">            docEl.<span class="property">firstElementChild</span>.<span class="title function_">appendChild</span>(metaEl);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> wrap = doc.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">            wrap.<span class="title function_">appendChild</span>(metaEl);</span><br><span class="line">            doc.<span class="title function_">write</span>(wrap.<span class="property">innerHTML</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">refreshRem</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> width = docEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">width</span>;</span><br><span class="line">        <span class="comment">// 适配平板</span></span><br><span class="line">        <span class="keyword">if</span> (width / dpr &gt; <span class="number">540</span>) &#123;</span><br><span class="line">            width = <span class="number">540</span> * dpr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> rem = width / <span class="number">10</span>;</span><br><span class="line">        docEl.<span class="property">style</span>.<span class="property">fontSize</span> = rem + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        flexible.<span class="property">rem</span> = win.<span class="property">rem</span> = rem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    win.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(tid);</span><br><span class="line">        tid = <span class="built_in">setTimeout</span>(refreshRem, <span class="number">300</span>);</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">    win.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pageshow&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.<span class="property">persisted</span>) &#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(tid);</span><br><span class="line">            tid = <span class="built_in">setTimeout</span>(refreshRem, <span class="number">300</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (doc.<span class="property">readyState</span> === <span class="string">&#x27;complete&#x27;</span>) &#123;</span><br><span class="line">        doc.<span class="property">body</span>.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="number">12</span> * dpr + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        doc.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            doc.<span class="property">body</span>.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="number">12</span> * dpr + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        &#125;, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="title function_">refreshRem</span>();</span><br><span class="line"></span><br><span class="line">    flexible.<span class="property">dpr</span> = win.<span class="property">dpr</span> = dpr;</span><br><span class="line">    flexible.<span class="property">refreshRem</span> = refreshRem;</span><br><span class="line">    flexible.<span class="property">rem2px</span> = <span class="keyword">function</span>(<span class="params">d</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="built_in">parseFloat</span>(d) * <span class="variable language_">this</span>.<span class="property">rem</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> d === <span class="string">&#x27;string&#x27;</span> &amp;&amp; d.<span class="title function_">match</span>(<span class="regexp">/rem$/</span>)) &#123;</span><br><span class="line">            val += <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line">    flexible.<span class="property">px2rem</span> = <span class="keyword">function</span>(<span class="params">d</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> val = <span class="built_in">parseFloat</span>(d) / <span class="variable language_">this</span>.<span class="property">rem</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> d === <span class="string">&#x27;string&#x27;</span> &amp;&amp; d.<span class="title function_">match</span>(<span class="regexp">/px$/</span>)) &#123;</span><br><span class="line">            val += <span class="string">&#x27;rem&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)(<span class="variable language_">window</span>, <span class="variable language_">window</span>[<span class="string">&#x27;lib&#x27;</span>] || (<span class="variable language_">window</span>[<span class="string">&#x27;lib&#x27;</span>] = &#123;&#125;));</span><br></pre></td></tr></table></figure>
<p>使用：<br>
未引入前：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">750px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">640px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>引入后：除以100并将px换成rem</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-size-base</span>: <span class="number">75</span>;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">750rem</span>/@font-size-base;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">640rem</span>/@font-size-base;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>换算的依据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">refreshRem</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> width = docEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">width</span>;</span><br><span class="line">    <span class="comment">// 适配平板</span></span><br><span class="line">    <span class="keyword">if</span> (width / dpr &gt; <span class="number">540</span>) &#123;</span><br><span class="line">        width = <span class="number">540</span> * dpr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> rem = width / <span class="number">10</span>;</span><br><span class="line">    docEl.<span class="property">style</span>.<span class="property">fontSize</span> = rem + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    flexible.<span class="property">rem</span> = win.<span class="property">rem</span> = rem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>作者：流云诸葛<br>
出处：<a href="http://www.cnblogs.com/lyzg/">http://www.cnblogs.com/lyzg/</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>rem布局</tag>
        <tag>自适应方案</tag>
      </tags>
  </entry>
  <entry>
    <title>简单的存档加密方法</title>
    <url>/2c578d16.html</url>
    <content><![CDATA[<p>方法来自百度 这里只是当作笔记记录</p>
<p>用于Unity游戏存档加密 C#语言</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"> </span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> * Writer：June</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> * Data：2021.11.9</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> * Function：序列化数据测试类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> * Remarks：</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SerializeDataTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> filePath;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span> =&gt; filePath = Path.Combine(Application.streamingAssetsPath, <span class="string">&quot;Data.txt&quot;</span>);</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//保存</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.S))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//实例化玩家</span></span><br><span class="line">            Player player = <span class="keyword">new</span> Player()</span><br><span class="line">            &#123;</span><br><span class="line">                playerName = <span class="string">&quot;June&quot;</span>,</span><br><span class="line">                attack = <span class="number">20</span>,</span><br><span class="line">                armor = <span class="number">50</span></span><br><span class="line">            &#125;;</span><br><span class="line">            SerializeDataManager.SaveData(filePath, player);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//加载</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.L))</span><br><span class="line">        &#123;</span><br><span class="line">            Player player = SerializeDataManager.LoadData(filePath);</span><br><span class="line">            Debug.Log(<span class="string">$&quot;玩家名字：<span class="subst">&#123;player.playerName&#125;</span>   攻击力：<span class="subst">&#123;player.attack&#125;</span>   护甲：<span class="subst">&#123;player.armor&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>存档加密</tag>
        <tag>游戏存档</tag>
      </tags>
  </entry>
  <entry>
    <title>青叶笔记小程序开源项目</title>
    <url>/76eb3e63.html</url>
    <content><![CDATA[<h3 id="自言自语">自言自语</h3>
<p>分享给大家一个微信小程序笔记本，是我自己开发的~ 🙂</p>
<p>开发这个小程序的原因是因为一般的笔记本小程序不支持附加账号密码 而我的笔记一般就是为了存账号密码文本内容都较少 所以我干脆就自己写了一套小程序</p>
<p>账号密码存入数据库都是加密的 只有在前端分享和详情中看到解密内容</p>
<h3 id="源码下载">源码下载</h3>
<div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-1">📑前端源码</button></li><li class="tab"><button type="button" data-href="#tab-2">📑后端源码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1"><p><a href="https://gitee.com/smallfoxi/note-mp">https://gitee.com/smallfoxi/note-mp</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2"><p><a href="https://gitee.com/smallfoxi/note-admin">https://gitee.com/smallfoxi/note-admin</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h3 id="青叶笔记小程序特点">青叶笔记小程序特点</h3>
<p><img src="../images/project_cover_note.jpg" alt="青叶笔记"></p>
<ol>
<li>支持分享码形式分享给好友看</li>
<li>支持Markdown语法</li>
<li>支持笔记附加账号密码信息可以多个账号</li>
<li>支持微信登录</li>
<li>笔记附加网址</li>
<li>笔记搜索 标签搜索</li>
<li><strong>个人资质</strong>也可以上线</li>
</ol>
<h3 id="分享效果演示">分享效果演示</h3>
<p><img src="../images/note_imgae1.jpg" alt="演示图1"></p>
]]></content>
      <categories>
        <category>资源分享</category>
      </categories>
      <tags>
        <tag>青叶笔记</tag>
        <tag>微信小程序</tag>
        <tag>笔记小程序</tag>
        <tag>记事本</tag>
      </tags>
  </entry>
</search>
